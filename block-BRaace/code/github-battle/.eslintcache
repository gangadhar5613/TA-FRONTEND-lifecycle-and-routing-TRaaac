[{"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/index.js":"1","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/GitHubStars.js":"2","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/Buttons.js":"3","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/Cards.js":"4","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/Loader.js":"5","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHub-battle/Battle.js":"6","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHub-battle/Board.js":"7","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHub-battle/Winner.js":"8","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/Home.js":"9"},{"size":656,"mtime":1612724122331,"results":"10","hashOfConfig":"11"},{"size":361,"mtime":1612704407488,"results":"12","hashOfConfig":"11"},{"size":2145,"mtime":1612722928252,"results":"13","hashOfConfig":"11"},{"size":1956,"mtime":1612722715201,"results":"14","hashOfConfig":"11"},{"size":247,"mtime":1612702736420,"results":"15","hashOfConfig":"11"},{"size":1634,"mtime":1612719879991,"results":"16","hashOfConfig":"11"},{"size":4612,"mtime":1612718698144,"results":"17","hashOfConfig":"11"},{"size":4579,"mtime":1612720688063,"results":"18","hashOfConfig":"11"},{"size":1076,"mtime":1612723845954,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a1usyx",{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/index.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/GitHubStars.js",["43","44","45","46"],"import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter,Route} from 'react-router-dom'\r\n\r\n\r\nimport Buttons from './Buttons'\r\n\r\nclass GitHubStars extends React.Component{\r\n   constructor(props){\r\n       super(props)\r\n   }\r\n\r\n   render(){\r\n       return(\r\n           <Buttons />\r\n       )\r\n   }\r\n    \r\n}\r\n\r\n\r\nexport default GitHubStars",["47","48"],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/Buttons.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/Cards.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHubStars/Loader.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHub-battle/Battle.js",["49"],"import React from 'react'\r\nimport Buttons from '../GitHubStars/Buttons'\r\nimport Board from './Board'\r\nimport Winner from './Winner'\r\n\r\nclass Battle extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user1:'',\r\n            user2:'',\r\n           user1Data:null,\r\n           user2Data:null,\r\n           battleStarted:false,\r\n           battlereset:false\r\n        }\r\n    }\r\n\r\n    handleUser = (event) => {\r\n        const {name,value} = event.target\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    let username = event.target.dataset.user\r\n   let userdata = event.target.dataset.userdata\r\n    fetch(`https://api.github.com/users/${this.state[username]}`)\r\n    .then((res) => res.json())\r\n    .then((user) => this.setState({[userdata]:user}))\r\n   }\r\n\r\n   handleBattle = () => {\r\n    this.setState({\r\n        battleStarted:!this.state.battleStarted\r\n    })\r\n    }\r\n\r\n    handleReset = () =>{\r\n        this.setState({\r\n           battleStarted:false,\r\n           user1:'',\r\n           user2:'',\r\n           user1Data:null,\r\n           user2Data:null\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n           <section>\r\n               {\r\n                   ((this.state.battleStarted) ? <Winner handleReset={this.handleReset} state={this.state} user1={this.state.user1Data} user2={this.state.user2Data}  /> : <Board handleBattle={this.handleBattle} state={this.state} handleSubmit={this.handleSubmit} handleUser={this.handleUser} />)\r\n               }\r\n           </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Battle","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHub-battle/Board.js",["50","51"],"import React from 'react';\r\nimport Winner from './Winner'\r\n\r\nclass Board extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n  \r\n\r\n    render(){\r\n        return(\r\n            <section className=' h-screen flex flex-col items-center justify-center'>\r\n            <div className='flex flex-row text-center items-center my-10 justify-center'>\r\n                 <div className='bg-gray-100 h-20 w-60 shadow-xl mx-2'>\r\n                         <h2>Enter two GitHub Users</h2>\r\n                     <i className=\"fas text-blue-700 text-4xl my-2 fa-user-friends\"></i>\r\n                 </div>\r\n                 <div className='bg-gray-100 h-20 w-60 shadow-xl mx-2'>\r\n                         <h2>Battle</h2>\r\n                         <i className=\"fab text-red-600 text-4xl my-2 fa-battle-net\"></i>\r\n                 </div>\r\n                 <div className='bg-gray-100 h-20 w-60 shadow-xl mx-2'>\r\n                         <h2>Winner</h2>\r\n                         <i className=\"fas text-green-700 text-4xl my-2 fa-trophy\"></i>\r\n                 </div>\r\n            </div>\r\n          <div>\r\n                 <div className='my-20 flex flex-row items-center justify-between'>\r\n                             {\r\n                                 (!this.props.state.user1Data ?                                \r\n                                 <div className='mx-10'>\r\n                                    <label htmlFor='user1' className='user1-label text-2xl mx-1'>User 1</label>\r\n                                     <input  onChange={this.props.handleUser} type='text' id='user1' name='user1' className='border-2 border-green-400 w-96 p-2' value={this.props.state.user1} placeholder='Enter GitHub User1'></input>\r\n                                     <button onClick={this.props.handleSubmit} data-userdata='user1Data' data-user='user1' className='bg-black text-white py-2 px-6 mx-1' type='submit'>Submit</button>\r\n                                    </div>\r\n                                  : '')\r\n                             }\r\n                             {\r\n                                 (this.props.state.user1Data ? (\r\n                                 <div className='text-xl flex items-center flex-row bg-green-300 mx-2 w-96 h-30 p-2'>\r\n                                 <img className='w-20 rounded-full h-20'  src={this.props.state.user1Data.avatar_url} alt=''></img>\r\n                                 <h2>{this.props.state.user1Data.login}</h2>\r\n                                 </div>\r\n                                 ):'')\r\n\r\n\r\n                             }\r\n                             {\r\n                                 \r\n                                 (this.props.state.user2Data ? (\r\n                                 <div className='text-xl flex items-center flex-row bg-green-300 w-96 h-30 p-2 mx-2' >\r\n                                 <img className='w-20 rounded-full h-20'  src={this.props.state.user2Data.avatar_url} alt=''></img>\r\n                                 <h2>{this.props.state.user2Data.login}</h2>\r\n                                 </div>\r\n                                 ):'')\r\n                             }\r\n\r\n                             {\r\n                                 (!this.props.state.user2Data ?                                \r\n                                  <div className='mx-10'>\r\n                                     <label htmlFor='user2' className='user2-label  text-2xl mx-1'>User 2</label>\r\n                                     <input onChange={this.props.handleUser} type='text' id='user2' name='user2' value={this.props.state.user2} className='border-2 border-green-400 w-96 p-2' placeholder='Enter GitHub User2'></input>\r\n                                     <button onClick={this.props.handleSubmit} data-userdata='user2Data' data-user='user2'   className='bg-black text-white py-2 px-6 mx-1' type='submit'>Submit</button>\r\n                                 </div> \r\n                             : '')\r\n                             }\r\n                     </div>\r\n                    {\r\n                        (this.props.state.user1Data && this.props.state.user2Data ?  \r\n                         <div className='flex items-center justify-center' >\r\n                            <button onClick={this.props.handleBattle} className='text-3xl py-2 px-6 bg-black text-white outline-none' type='submit'>Battle</button>\r\n                         </div>\r\n                          : '')\r\n                    }\r\n            </div>\r\n\r\n\r\n         </section>\r\n\r\n\r\n\r\n                 \r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/GitHub-battle/Winner.js",["52"],"import React from 'react'\r\nimport Board from './Board'\r\nimport Loader from '../GitHubStars/Loader'\r\n\r\nclass Winner extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n              user1Score:0,\r\n              user2Score:0,\r\n              user1Status:false,\r\n              user2Status:false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let user1Score = (this.props.user1.public_repos + this.props.user1.following + this.props.user1.followers)\r\n        let user2Score = (this.props.user2.public_repos + this.props.user2.following + this.props.user2.followers)\r\n             if(user1Score > user2Score){\r\n                 this.setState({\r\n                     user1Status:true,\r\n                     user1Score:user1Score,\r\n                     user2Score:user2Score\r\n                 })\r\n             }else{\r\n                 this.setState({\r\n                     user2Status:true,\r\n                     user1Score:user1Score,\r\n                     user2Score:user2Score\r\n                 })\r\n             }            \r\n\r\n    }\r\n \r\n\r\n    render(){\r\n        return(\r\n            <section className='my-10'>\r\n                {\r\n                    ((!this.props.user1 && !this.props.user2) ? <Loader /> :\r\n                    <>\r\n                      <div className='flex flex-row items-center justify-center'>\r\n                            <div className='text-center flex flex-col items-center justify-around   bg-gray-200 shadow-xl w-96 h-96'>\r\n                                <h2 className='text-2xl font-bold'>{this.state.user1Status ? 'Winner' : 'Looser'}</h2>\r\n                                <img className='w-20 rounded-full'  src={this.props.user1.avatar_url} alt='user' ></img>\r\n                                <span><span className='font-bold mx-1'>Score:</span>{this.state.user1Score}</span>\r\n                                <h2>{this.props.user1.login}</h2>\r\n                                <h4><span className='font-bold text-green-700 mx-1'>Name:</span>{this.props.user1.name}</h4>\r\n                                <address><span className='font-bold text-blue-500 mx-1'>Location:</span>{this.props.user1.location}</address>\r\n                                <h3><span className='font-bold text-blue-500 mx-1'>Company:</span>{this.props.user1.company}</h3>\r\n                                <h3><span className='font-bold text-blue-500 mx-1'>Following:</span>{this.props.user1.following}</h3>\r\n                                <h3><span className='font-bold text-blue-500 mx-1'>Followers:</span>{this.props.user1.followers}</h3>\r\n                                <h4><span className='font-bold text-blue-500 mx-1'>Public_repos:</span>{this.props.user1.public_repos}</h4>\r\n                            </div>\r\n                            <div className='text-center mx-6 flex flex-col justify-around items-center  bg-gray-200 shadow-xl w-96 h-96'>\r\n                                <h2 className='text-2xl font-bold'>{this.state.user2Status ? 'Winner' : 'Looser'}</h2>\r\n                                <img className='w-20 rounded-full' src={this.props.user2.avatar_url} alt='user' ></img>\r\n                                <span><span className='font-bold mx-1'>Score:</span>{this.state.user2Score}</span>\r\n                                <h2>{this.props.user2.login}</h2>\r\n                                <h4><span className='font-bold text-green-700 mx-1'>Name:</span>{this.props.user2.name}</h4>\r\n                                <address><span className='font-bold text-blue-500 mx-1'>Location:</span>{this.props.user2.location}</address>\r\n                                <h3><span className='font-bold text-blue-500 mx-1'>Company:</span>{this.props.user2.company}</h3>\r\n                                <h3><span className='font-bold text-blue-500 mx-1'>Following:</span>{this.props.user2.following}</h3>\r\n                                <h3><span className='font-bold text-blue-500 mx-1'>Followers:</span>{this.props.user2.followers}</h3>\r\n                                <h4><span className='font-bold text-blue-500 mx-1'>Public_repos:</span>{this.props.user2.public_repos}</h4>\r\n                            </div>\r\n                      </div>\r\n                      <div className='flex justify-center my-5'>\r\n                          <button onClick={this.props.handleReset} className='bg-black text-white text-2xl py-2 px-6'>Reset</button>\r\n                      </div>\r\n                    </>\r\n                     )\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Winner","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/TA-FRONTEND-lifecycle-and-routing-TRaaac/block-BRaace/code/github-battle/src/Components/Home.js",["53","54","55","56"],{"ruleId":"57","severity":1,"message":"58","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":3,"column":9,"nodeType":"59","messageId":"60","endLine":3,"endColumn":22},{"ruleId":"57","severity":1,"message":"62","line":3,"column":23,"nodeType":"59","messageId":"60","endLine":3,"endColumn":28},{"ruleId":"63","severity":1,"message":"64","line":9,"column":4,"nodeType":"65","messageId":"66","endLine":11,"endColumn":5},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"57","severity":1,"message":"71","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":15},{"ruleId":"57","severity":1,"message":"72","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":5,"column":5,"nodeType":"65","messageId":"66","endLine":8,"endColumn":6},{"ruleId":"57","severity":1,"message":"73","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},{"ruleId":"57","severity":1,"message":"74","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":14},{"ruleId":"57","severity":1,"message":"75","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":4,"column":9,"nodeType":"59","messageId":"60","endLine":4,"endColumn":22},{"ruleId":"57","severity":1,"message":"62","line":4,"column":28,"nodeType":"59","messageId":"60","endLine":4,"endColumn":33},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'Buttons' is defined but never used.","'Winner' is defined but never used.","'Board' is defined but never used.","'Battle' is defined but never used.","'GitHubStars' is defined but never used.","no-global-assign","no-unsafe-negation"]